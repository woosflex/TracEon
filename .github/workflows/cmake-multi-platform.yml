name: Create Release and Build Binaries

# This workflow runs when a new tag is pushed (e.g., v0.0.1, v1.2.3)
on:
  push:
    tags:
      - 'v*'

jobs:
  # This job creates the GitHub Release and gets the URL for uploading assets.
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  # This job builds the binaries for each OS.
  build:
    name: Build on ${{ matrix.os }}
    needs: create_release # This job runs only after the release has been created.
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config Release

      - name: Prepare Artifacts for Windows
        if: matrix.os == 'windows-latest'
        run: |
          Compress-Archive -Path ${{ github.workspace }}/build/Release/gcp_benchmark.exe -DestinationPath ${{ github.workspace }}/traceon-windows-amd64.zip
        shell: pwsh

      - name: Prepare Artifacts for Linux/macOS
        if: matrix.os != 'windows-latest'
        run: |
          tar -czvf ${{ github.workspace }}/traceon-${{ runner.os }}-${{ runner.arch }}.tar.gz -C ${{ github.workspace }}/build gcp_benchmark
        shell: bash

      - name: Upload Release Asset (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/traceon-windows-amd64.zip
          asset_name: traceon-windows-amd64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset (Linux/macOS)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/traceon-${{ runner.os }}-${{ runner.arch }}.tar.gz
          asset_name: traceon-${{ runner.os }}-${{ runner.arch }}.tar.gz
          asset_content_type: application/gzip